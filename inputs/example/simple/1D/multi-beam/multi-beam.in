!--------------------------------------------------------------------------------------------------!
!VALUE              TYPE        NAME                       DESCRIPTION
!--------------------------------------------------------------------------------------------------!
!                       OPTIONS


.TRUE.                  LOGICAL     qOneD                      If TRUE, model 1D FEL, with only 1 node and 1 macroparticle in transverse dimensions
.TRUE.                  LOGICAL     qFieldEvolve               if letting the radiation field evolve
.TRUE.                  LOGICAL     qElectronsEvolve           if integrating electron equations
.TRUE.                  LOGICAL     qElectronFieldCoupling     if allowing field to feedback onto the electron equations
.FALSE.                 LOGICAL     qFocussing                 if focussing is included in the transverse plane
.FALSE.                 LOGICAL     qMatchedBeam               if matching beam to undulator. If TRUE, electron pulse sigma and length in x,y,px,py are automatically calculated
.FALSE.                  LOGICAL     qDiffraction               if modelling diffraction
.TRUE.                  LOGICAL     qFilter                    TRUE to filter, if FALSE the low frequencies will just be ignored during diffraction
.TRUE.                  LOGICAL     q_noise                    Shot noise in initial electron beam distribution
.FALSE.                 LOGICAL     qDump                      Do you wish to dump data so the run can be resumed if anything goes wrong? .TRUE. for yes.
.FALSE.                 LOGICAL     qResume                    If resuming from dump files left from a previous run
.TRUE.                  LOGICAL     qSeparateFiles             Write data to separate SDDS files at each step
.TRUE.                  LOGICAL     qFormattedFiles            Write data as formatted text(TRUE) or binary(FALSE)
.TRUE.                  LOGICAL     qWriteZ                    Write out Z data
.TRUE.                  LOGICAL     qWriteA                    Write out A data
.TRUE.                  LOGICAL     qWritePperp                Write out Pperp data
.TRUE.                  LOGICAL     qWriteP2                   Write out P2 data
.TRUE.                  LOGICAL     qWriteZ2                   Write out Z2 data
.TRUE.                  LOGICAL     qWriteX                    Write out X data
.TRUE.                  LOGICAL     qWriteY                    Write out Y data

              ELECTRON MACROPARTICLE SAMPLING


beam_file.in            CHARACTER   beam_file                  Name of the beam file
5.000000000000000E-01   REAL        sEThreshold          Beyond the threshold level(%) * the average of real electrons are removed(ignored)



                  FIELD NODE SAMPLING


1                   INTEGER     iNumNodesX                 Number of nodes in x direction
1                   INTEGER     iNumNodesY                 Number of nodes in y direction
32                  INTEGER     nodesPerLambdar            Number of nodes per resonant wavelength
1.000000000000000E+00   REAL        sFModelLengthX       Length of radiation field model in x direction
1.000000000000000E+00   REAL        sFModelLengthY       Length of radiation field model in y direction
1.017051843513946E+00   REAL        sFModelLengthZ2      Length of radiation field model in z2 dimension
1                       INTEGER     iRedNodesX           Length of central wiggler section in x where electrons will not leave
1                       INTEGER     iRedNodesY           Length of central wiggler section in y where electrons will not leave
3.000000000000000E-01   REAL        sFiltFrac            Specifies cutoff for high pass filter as fraction of resonant frequency
1.000000000000000E+00   REAL        sDiffFrac                  Specifies diffraction step size as fraction of the undulator period
1.0                     REAL        beta                       Absorption coefficient
seed_file.in            CHARACTER   seed_file                  Name of the seed file


                 INDEPENDANT VARIABLES


Input the scaled independant variables from [1] here


1.703345370307283E-03   REAL        rho                  Pierce parameter, describe the strength of the field
1.000000000000000E+00   REAL        ux                   Normalised magnitude of wiggler magnetic field x-vector: H=1 is helical, H=0 is planar
1.000000000000000E+00   REAL        uy                   Normalised magnitude of wiggler magnetic field y-vector: H=1 is helical, H=0 is planar
2.0                   REAL        aw                         rms unduator parameter
550.0                 REAL        gamma                      Resonant Energy
1.414213562373095E+00   REAL        sFocusfactor         Focussing factor f, from the betatron wavenumber
0.000000000000000E+00   REAL        Dfact                Dispersive strength factor for chicane
''                  CHARACTER   undType                    Undulator type - 'curved' , 'planepole' , else 1D (no off axis variation of aw)
0.0                     REAL        taper                      gradient of taper daw/dz


                      INTEGRATION AND OUTPUT


Here,a lattice file can be input to specify an undulator-chicane lattice.
If it is specified, then the user supplied value of nSteps and 
sStepSize is ignored, and the number of steps per undulator period
is used instead. Otherwise steps per und period is ignored and use 
nsteps and sstepsize.

What do we want to calculate in the code to output i.e. bunching, pulse current weighted average x, av sigma x etc


''                      CHARACTER   lattFile             Contents: N_w(periods), delta(periods) (!!! NO BLANK LINES AT END !!!)Blank if none.
96                  INTEGER     stepsPerPeriod  Number of steps per wiggler period
4                   INTEGER     nPeriods        Number of wiggler periods
0.000000000000000E+00   REAL        sZ                   Starting z position
'DataFile.dat'          CHARACTER   zDataFileName        Data file name
100                     INTEGER     iWriteNthSteps       Steps to write data at
100                     INTEGER     iDumpNthSteps        Steps to dump data at (0 for no dumping)
1.000000000000000E+02   REAL        sPEOut               Percentage of macroparticles to write out. Macroparticles are randomly selected.

