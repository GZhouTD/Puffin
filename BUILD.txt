# Build Instructions

Puffin is written mainly in modern fortran and one C file, and the 
post-processing scripts are in Python, using pytables and numpy. Puffin 
can be built using CMake, and uses SciMake (bundled with Puffin) to find
and link the external libraries.

## To build Puffin

To build Puffin you will need parallel hdf5 and fftw3 libs already installed. 
If you're installing on a system with different compilers, you'll need to 
make sure these libraries are built with the same build chain as you're going
to use for Puffin.

If you wish, fftw3 and hdf5 may be obtained and built using Bilder (see bottom 
of this guide). 

1. Fetch Puffin to /path/to/Puffin

2. Make a new dir for the build:

mkdir /path/to/puffin-install; cd /path/to/puffin-install

3. Run cmake, e.g.

cmake -DCMAKE_INSTALL_PREFIX:PATH=/path/to/puffin-install \
  -DFftw3_ROOT_DIR='/path/to/fftw3'    \
  -DHdf5_ROOT_DIR='/path/to/hdf5'      \
  /path/to/Puffin 

4. make && make install

You should get a puffin binary in /path/to/puffin-install

## Building hdf5 and fftw3 using bilder


./mkvisitall.sh -k ../contrib -i ../install -b ../build \
  fftw,cmake,autotools,hdf5,numpy,tables 

The requested libraries will be in ../contrib, along with a bash script
to add them to your path. So do 

source /path/to/contrib/visitall.sh

and then you can add the 

#TODO Automatic installation of binary and files.
